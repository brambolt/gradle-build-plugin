
plugins {
  id 'java-gradle-plugin'
  id 'java-library'
  id 'groovy'
  id 'maven-publish'
  id 'com.gradle.plugin-publish' version '0.11.0'
  id 'com.jfrog.artifactory' version '4.15.2'
  id 'org.ajoberstar.grgit' version '4.0.2'
}

description = 'A Gradle plugin for building Gradle plugins.'
group = 'com.brambolt.gradle'

final String SNAPSHOT = 'SNAPSHOT'

ext {
  artifactId = 'brambolt-gradle-plugin-build'
  pluginClass = 'com.brambolt.gradle.PluginBuildPlugin'
  pluginDisplayName = 'Brambolt Plugin Build plugin'
  pluginId = 'com.brambolt.gradle.pluginbuild'
  pluginTags = [ 'plugin', 'build' ]
  pluginWebsite = 'https://github.com/brambolt/gradle-plugin-build'
  projectVersion = '2020.05.25'
  vcsUrl = 'https://github.com/brambolt/gradle-plugin-build'

  buildNumber = project.hasProperty('buildNumber') ? buildNumber : SNAPSHOT
  buildDate = project.hasProperty('buildDate') ? buildDate : new Date()
  vcsBranch = grgit.branch.current().fullName
  vcsCommit = grgit.head().abbreviatedId
}

version = SNAPSHOT.equals(buildNumber) ? SNAPSHOT : "${projectVersion}-${buildNumber}"

logger.quiet("""
  Artifact id:          ${artifactId}
  Branch:               ${vcsBranch}
  Commit:               ${vcsCommit}
  Description:          ${description}
  Group:                ${group}
  Name:                 ${name}
  Plugin class:         ${pluginClass}
  Plugin display name:  ${pluginDisplayName}
  Plugin id:            ${pluginId}
  Plugin tags:          ${pluginTags}
  Plugin website:       ${pluginWebsite}
  VCS URL:              ${vcsUrl}
  Version:              ${version}""")

repositories {
  mavenLocal()
  if (project.hasProperty('artifactoryContextUrl')) {
    maven {
      url = project.artifactoryContextUrl
      credentials {
        username = project.artifactoryUser
        password = project.artifactoryToken
      }
    }
  }
  maven {
    name = 'Plugin Portal'
    url = 'https://plugins.gradle.org/m2/'
  }
  mavenCentral()
  jcenter()
}

dependencies {
  implementation gradleApi()
  implementation localGroovy()
  implementation 'com.gradle.publish:plugin-publish-plugin:latest.release'
  implementation 'com.jfrog.artifactory:com.jfrog.artifactory.gradle.plugin:latest.release'
  implementation 'org.ajoberstar.grgit:grgit-gradle:latest.release'
  testImplementation 'org.slf4j:slf4j-api:latest.release'
  testImplementation 'junit:junit:latest.release'
  testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
  testRuntime 'org.slf4j:slf4j-simple:latest.release'
}

sourceCompatibility = 14
targetCompatibility = 8

sourceSets {
  compatTest {
    compileClasspath += main.output
    runtimeClasspath += main.output
  }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

jar {
  baseName = artifactId
  manifest {
    attributes([
      'Build-Date'     : buildDate,
      'Build-Number'   : buildNumber,
      'Build-Version'  : version,
      'Git-Branch'     : vcsBranch,
      'Git-Commit'     : vcsCommit,
      'Product-Version': version
    ], 'Brambolt')
  }
}

task javadocJar(type: Jar, dependsOn: ['javadoc']) {
  classifier = 'javadoc'
  from(javadoc)
}

task sourceJar(type: Jar, dependsOn: jar) {
  classifier = 'sources'
  from sourceSets.main.output
  from sourceSets.main.allSource
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId = group
      artifactId = project.artifactId
      version = project.version
      from project.components.java
      artifact(javadocJar)
      artifact(sourceJar)
    }
  }
}

if (project.hasProperty('artifactoryContextUrl')) {
  artifactory {
    contextUrl = artifactoryContextUrl
    publish {
      repository {
        repoKey = artifactoryRepoKey
        username = artifactoryUser
        password = artifactoryToken
        maven = true
      }
      defaults {
        publications('mavenJava')
      }
    }
    resolve {
      repository {
        repoKey = artifactoryRepoKey
        username = artifactoryUser
        password = artifactoryToken
        maven = true
      }
    }
  }
  artifactoryPublish.dependsOn(publishToMavenLocal)
}

gradlePlugin {
  plugins {
    pluginPlugin {
      id = project.pluginId
      implementationClass = project.pluginClass
    }
  }
}

pluginBundle {
  website = project.pluginWebsite
  vcsUrl = project.vcsUrl
  description = project.description
  plugins {
    pluginPlugin {
      displayName = project.pluginDisplayName
      tags = project.pluginTags
    }
  }
  mavenCoordinates {
    groupId = project.group
    artifactId = project.artifactId
    version = project.version
  }
}

task local(dependsOn: publishToMavenLocal)

task all(dependsOn: local)

if (project.hasProperty('artifactoryContextUrl')) {
  tasks.getByName('publishPlugins').dependsOn(['artifactoryPublish'])
  all.dependsOn(['artifactoryPublish'])
}

